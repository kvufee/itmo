create table employee
(
    id integer primary key generated always as identity,
    salary bigint,
    gymId bigint,
    userId bigint
);

INSERT INTO employee(salary, gymId, userId) VALUES
(25000, 1, 1),
(27000, 1, 2),
(40000, 1, 3),
(54000, 1, 4),
(60000, 2, 5),
(33000, 2, 6),
(44000, 2, 7);


create table salary_less_26000(check(salary < 26000)) inherits (employee);
create table salary_less_51000(check(salary < 51000)) inherits (employee);
create table salary_less_121000(check(salary < 121000)) inherits (employee);

CREATE OR REPLACE FUNCTION partition_salaries() RETURNS TRIGGER AS $$
BEGIN
    IF NEW.salary < 26000 THEN
        INSERT INTO salary_less_26000 VALUES (NEW.*);
    ELSIF NEW.salary < 51000 THEN
        INSERT INTO salary_less_51000 VALUES (NEW.*);
    ELSE
        INSERT INTO salary_less_121000 VALUES (NEW.*);
    END IF;
    RETURN NULL;
END;
$$ LANGUAGE plpgsql;
CREATE TRIGGER partition_trigger BEFORE INSERT ON employee
    FOR EACH ROW EXECUTE FUNCTION partition_salaries();


truncate employee

